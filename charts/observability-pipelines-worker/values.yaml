# Default values for Observability Pipelines Worker

## FOR AN EFFORTLESS UPGRADE PATH, DO NOT COPY THIS FILE AS YOUR OWN values.yaml.
## ONLY SET THE VALUES YOU WANT TO OVERRIDE IN YOUR values.yaml.

# nameOverride -- Override the name of the app.
nameOverride: ""

# fullnameOverride -- Override the fully qualified app name.
fullnameOverride: ""

# commonLabels -- Labels to apply to all resources.
commonLabels: {}
#  team_name: dev

datadog:
  # datadog.apiKey -- Specify your Datadog API key.
  apiKey:  # <DD_API_KEY>
  # datadog.apiKeyExistingSecret -- Specify a preexisting Secret that has your API key instead of creating a new one.
  # The value must be stored under the `api-key`.
  apiKeyExistingSecret: ""
  # datadog.configkey -- Specify your Datadog Configuration key.
  configKey:  # <DD_OP_CONFIG_KEY>
  # datadog.configKeyExistingSecret -- Specify a preexisting Secret that has your configuration key instead of
  # creating a new one. The value must be stored under the `config-key`.
  configKeyExistingSecret: ""
  ## Set to 'datadoghq.com' to send data to the US1 site.
  ## Set to 'datadoghq.eu' to send data to the EU site.
  ## Set to 'us3.datadoghq.com' to send data to the US3 site.
  ## Set to 'us5.datadoghq.com' to send data to the US5 site.
  ## Set to 'ddog-gov.com' to send data to the US1-FED site.
  # datadog.site -- The [site](https://docs.datadoghq.com/getting_started/site/) of the Datadog intake to send data to.
  site: datadoghq.com

image:
  # image.name -- Specify the image name to use (relative to `image.repository`).
  name: observability-pipelines-worker
  # image.tag -- Specify the image tag to use.
  tag: 0.1.0
  # image.digest -- (string) Specify the image digest to use; takes precedence over `image.tag`.
  digest:
  ## Currently, we offer images at:
  ## - GCP: gcr.io/datadoghq
  ## - DockerHub: docker.io/datadog
  ## - AWS: public.ecr.aws/datadog
  # image.repository -- Specify the image repository to use.
  repository: gcr.io/datadoghq
  # image.pullPolicy -- Specify the
  # [pullPolicy](https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy).
  pullPolicy: IfNotPresent
  # image.pullSecrets -- Specify the
  # [imagePullSecrets](https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod).
  pullSecrets: []
  #  - name: <REGISTRY_SECRET>

# replicas -- Specify the number of replicas to create.
replicas: 1

# podManagementPolicy -- Specify the
# [podManagementPolicy](https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#pod-management-policies).
podManagementPolicy: OrderedReady

## TODO: Support Watermark Pod Autoscaler?
autoscaling:
  # autoscaling.enabled -- If **true**, create a
  # [HorizontalPodAutoscaler](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/).
  enabled: false
  # autoscaling.minReplicas -- Specify the minimum number of replicas.
  minReplicas: 1
  # autoscaling.maxReplicas -- Specify the maximum number of replicas.
  maxReplicas: 10
  # autoscaling.targetCPUUtilizationPercentage -- Specify the target CPU utilization.
  targetCPUUtilizationPercentage: 80
  # autoscaling.targetMemoryUtilizationPercentage -- (int) Specify the target memory utilization.
  targetMemoryUtilizationPercentage:
  # autoscaling.behavior -- Configure separate scale-up and scale-down behaviors.
  behavior: {}
    # scaleDown:
    #   stabilizationWindowSeconds: 300

podDisruptionBudget:
  # podDisruptionBudget.enabled -- If **true**, create a
  # [PodDisruptionBudget](https://kubernetes.io/docs/tasks/run-application/configure-pdb/).
  enabled: false
  # podDisruptionBudget.minAvailable -- Specify the number of Pods that must still be available after an eviction.
  minAvailable: 1
  # podDisruptionBudget.maxUnavailable -- (int) Specify the number of Pods that can be unavailable after an eviction.
  maxUnavailable:

serviceAccount:
  # serviceAccount.create -- If **true**, create a ServiceAccount.
  create: true
  # serviceAccount.name -- Specify a preexisting ServiceAccount to use if `serviceAccount.create` is **false**.
  name: default
  # serviceAccount.annotations -- Annotations to add to the ServiceAccount, if `serviceAccount.create` is **true**.
  annotations: {}

# podAnnotations -- Set annotations on Pods.
podAnnotations: {}

# podLabels -- Set labels on Pods.
podLabels: {}

# podPriorityClassName -- Set the
# [priorityClassName](https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/#priorityclass).
podPriorityClassName: ""

# podHostNetwork -- Enable the hostNetwork option on Pods.
podHostNetwork: false

# podSecurityContext -- Allows you to overwrite the default
# [PodSecurityContext](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/).
podSecurityContext: {}

# securityContext -- Specify securityContext for Containers.
securityContext: {}

# command -- Override default image command.
command: []

# args -- Override default image arguments.
args:
  - --config
  - "/etc/opw/config.yaml"

# env -- Define environment variables.
env: []
#  - name: <ENV_VAR_NAME>
#    value: <ENV_VAR_VALUE>
#  - name: <ENV_VAR_NAME>
#    valueFrom:
#      secretKeyRef:
#        name: <SECRET_NAME>
#        key: <KEY_NAME>

# envFrom -- Define environment variables from ConfigMap or Secret data.
envFrom: []
#  - configMapRef:
#      name: <CONFIGMAP_NAME>
#  - secretRef:
#     name: <SECRET_NAME>

# containerPorts -- Manually define ContainerPort array, overriding automated generation of ContainerPorts.
containerPorts: []

# resources -- Specify resource requests and limits.
resources: {}
  # requests:
  #   cpu: 200m
  #   memory: 256Mi
  # limits:
  #   cpu: 200m
  #   memory: 256Mi

# lifecycle -- Specify lifecycle hooks for Containers.
lifecycle: {}
  # preStop:
  #   exec:
  #     command:
  #     - /bin/sleep
  #     - "10"

# updateStrategy -- Customize the
# [updateStrategy](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/stateful-set-v1/#StatefulSetSpec).
updateStrategy: {}
#   type: RollingUpdate
#   rollingUpdate:
#     maxUnavailable: 1

# terminationGracePeriodSeconds -- Override terminationGracePeriodSeconds.
terminationGracePeriodSeconds: 60

# nodeSelector -- Configure
# [nodeSelector](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector).
nodeSelector: {}

# tolerations -- Configure
# [taints and tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/).
tolerations: []

# affinity -- Configure
# [affinity and anti-affinity](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity).
affinity: {}

# topologySpreadConstraints -- Configure
# [topology spread constraints](https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/).
topologySpreadConstraints: []

service:
  # service.enabled -- If **true**, create a Service resource.
  enabled: true
  # service.type -- Specify the type for the Service.
  type: "ClusterIP"
  # service.annotations -- Specify annotations for the Service.
  annotations: {}
  # service.topologyKeys -- (array) Specify the
  # [topologyKeys](https://kubernetes.io/docs/concepts/services-networking/service-topology/#using-service-topology).
  topologyKeys:
  #  - "kubernetes.io/hostname"
  #  - "topology.kubernetes.io/zone"
  #  - "topology.kubernetes.io/region"
  #  - "*"
  # service.ports -- (array) Manually set the ServicePort array, overriding automated generation of ServicePorts.
  ports:
  # service.externalTrafficPolicy -- Specify the
  # [externalTrafficPolicy](https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip).
  externalTrafficPolicy: ""
  # service.loadBalancerIP -- Specify the
  # [loadBalancerIP](https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer).
  loadBalancerIP: ""
  # service.ipFamilyPolicy -- Configure
  # [IPv4/IPv6 dual-stack](https://kubernetes.io/docs/concepts/services-networking/dual-stack/).
  ipFamilyPolicy: ""
  # service.ipFamilies -- Configure
  # [IPv4/IPv6 dual-stack](https://kubernetes.io/docs/concepts/services-networking/dual-stack/).
  ipFamilies: []

serviceHeadless:
  # serviceHeadless.enabled -- If **true**, create a "headless" Service resource.
  enabled: true

ingress:
  # ingress.enabled -- If **true**, create an Ingress resource.
  enabled: false
  # ingress.className -- Specify the
  # [ingressClassName](https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress),
  # requires Kubernetes >= 1.18.
  className: ""
  # ingress.annotations -- Specify annotations for the Ingress.
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # ingress.hosts -- Configure the hosts and paths for the Ingress.
  hosts: []
  #  - host: chart-example.local
  #    paths:
  #      - path: /
  #        pathType: ImplementationSpecific
  #        # Specify the port name or number on the Service
  #        # Using name requires Kubernetes >=1.19
  #        port:
  #          name: ""
  #          number: ""
  # ingress.tls -- Configure TLS for the Ingress.
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# config -- This section supports using Helm templates to populate dynamic values. See Observability Pipelines'
# [configuration documentation](https://docs.datadoghq.com/observability_pipelines/reference/) for all options.
config: {}
#  data_dir: "/var/lib/opw/"
#  sources:
#    datadog_agents:
#      type: datadog_agent
#      address: 0.0.0.0:8282
#      multiple_outputs: true
#      store_api_key: false
#  sinks:
#    datadog_logs:
#      type: datadog_logs
#      inputs:
#        - datadog_agents.logs
#      compression: gzip
#      default_api_key: ${DD_API_KEY}
#      site: ${DD_SITE}
#    datadog_metrics:
#      type: datadog_metrics
#      inputs:
#        - datadog_agents.metrics
#      default_api_key: ${DD_API_KEY}
#      site: ${DD_SITE}
#    datadog_traces:
#      type: datadog_traces
#      inputs:
#        - datadog_agents.traces
#      default_api_key: ${DD_API_KEY}
#      site: ${DD_SITE}

# extraVolumes -- Specify additional Volumes to use.
extraVolumes: []

# extraVolumeMounts -- Specify Additional VolumeMounts to use.
extraVolumeMounts: []

# initContainers -- Specify initContainers to be added.
initContainers: []

# extraContainers -- Specify extra Containers to be added.
extraContainers: []

persistence:
  # persistence.enabled -- If **true**, create and use PersistentVolumeClaims.
  enabled: false
  # persistence.existingClaim -- Name of an existing PersistentVolumeClaim to use.
  existingClaim: ""
  # persistence.storageClassName -- (string) Specify the storageClassName for PersistentVolumeClaims.
  storageClassName:
  # persistence.accessModes -- Specify the accessModes for PersistentVolumeClaims.
  accessModes:
    - ReadWriteOnce
  # persistence.size -- Specify the size of PersistentVolumeClaims.
  size: 10Gi
  # persistence.finalizers -- Specify the finalizers of PersistentVolumeClaims.
  finalizers:
    - kubernetes.io/pvc-protection
  # persistence.selector -- Specify the selectors for PersistentVolumeClaims.
  selector: {}

# dnsPolicy -- Specify the
# [dnsPolicy](https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy).
dnsPolicy: ClusterFirst

# dnsConfig -- Specify the
# [dnsConfig](https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-dns-config).
dnsConfig: {}
#  nameservers:
#    - 1.2.3.4
#  searches:
#   - ns1.svc.cluster-domain.example
#   - my.dns.search.suffix
#  options:
#    - name: ndots
#      value: "2"
#    - name: edns0

# livenessProbe -- Specify the livenessProbe
# [configuration](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes).
livenessProbe: {}

# readinessProbe -- Specify the readinessProbe
# [configuration](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes).
readinessProbe: {}
