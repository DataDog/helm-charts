apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "datadog-operator.fullname" . }}
  labels:
{{ include "datadog-operator.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "datadog-operator.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "datadog-operator.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        ad.datadoghq.com/{{ .Chart.Name }}.check_names: '["openmetrics"]'
        ad.datadoghq.com/{{ .Chart.Name }}.init_configs: '[{}]'
        ad.datadoghq.com/{{ .Chart.Name }}.instances: |
          [{
            "prometheus_url": "http://%%host%%:{{ .Values.metricsPort }}/metrics",
            "namespace": "datadog.operator",
            "metrics": ["*"]
          }]
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "datadog-operator.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          args:
            - "-supportExtendedDaemonset={{ .Values.supportExtendedDaemonset }}"
            - "-logEncoder=json"
            - "-metrics-addr=:{{ .Values.metricsPort }}"
            - "-loglevel={{ .Values.logLevel }}"
          {{- if .Values.secretBackend.command }}
            - "-secretBackendCommand={{ .Values.secretBackend.command }}"
          {{- end }}
          ports:
            - name: metrics
              containerPort: {{ .Values.metricsPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz/
              port: 8081
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
