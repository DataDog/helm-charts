# Default values for datadog-operator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# replicaCount -- Number of instances of Datadog Operator
replicaCount: 1
image:
  # image.repository -- Repository to use for Datadog Operator image
  repository: gcr.io/datadoghq/operator
  # image.tag -- Define the Datadog Operator version to use
  tag: 0.4.0
  # image.pullPolicy -- Define the pullPolicy for Datadog Operator image
  pullPolicy: IfNotPresent
# imagePullSecrets -- Datadog Operator repository pullSecret (ex: specify docker registry credentials)
imagePullSecrets: []
# nameOverride -- Override name of app
nameOverride: ""
# fullNameOverride -- Override the full qualified app name
fullnameOverride: ""
# logLevel -- Set Datadog Operator log level (debug, info, error, panic, fatal)
logLevel: "info"
# supportExtendedDaemonset -- If true, supports using ExtendedDeamonSet CRD
supportExtendedDaemonset: "false"
# metricsPort -- Port used for OpenMetrics endpoint
metricsPort: 8383
secretBackend:
  # secretBackend.command -- Specifies the path to the command that implements the secret backend api
  command: ""
rbac:
  # rbac.create -- Specifies whether the RBAC resources should be created
  create: true
serviceAccount:
  # serviceAccount.create -- Specifies whether a service account should be created
  create: true
  # serviceAccount.name -- The name of the service account to use. If not set name is generated using the fullname template
  name:
# resources -- Set resources requests/limits for Datadog Operator PODs
resources: {}
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

# nodeSelector -- Allows to schedule Datadog Operator on specific nodes
nodeSelector: {}
# tolerations -- Allows to schedule Datadog Operator on tainted nodes
tolerations: []
# affinity -- Allows to specify affinity for Datadog Operator PODs
affinity: {}

# installCRDs -- Set to true to deploy the Datadog's CRDs
installCRDs: true

datadog-crds:
  crds:
    # datadog-crds.crds.datadogAgents -- Set to true to deploy the DatadogAgents CRD
    datadogAgents: true
    # datadog-crds.crds.datadogMetrics -- Set to true to deploy the DatadogMetrics CRD
    datadogMetrics: true
