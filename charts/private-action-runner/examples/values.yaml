runners:
  - name: "custom-runner"
    # Replace this section with the output of the private action runner enrollment process with the `--enroll-and-print-config` flag
    config:
      ddBaseURL: "https://app.datadoghq.com"
      urn: "CHANGE_ME_URN_FROM_CONFIG"
      privateKey: "CHANGE_ME_PRIVATE_KEY_FROM_CONFIG"
      modes:
        - appBuilder
        - workflowAutomation
      port: 9016
      actionsAllowlist:
        - com.datadoghq.http.request
    kubernetesPermissions:
      - apiGroups:
          - ""
        resources:
          - "pods"
        verbs:
          - "list"
          - "get"
          - "create"
          - "patch"
          - "update"
          - "delete"
      - apiGroups:
          - "apps"
        resources:
          - "deployments"
        verbs:
          - "list"
          - "get"
          - "create"
          - "patch"
          - "update"
          - "delete"

# credential files provided here will be mounted in /etc/dd-action-runner/
# it is safe to remove unneeded files from this section
credentialFiles:
  - fileName: "http_basic_creds.json"
    data: |
      {
        "auth_type": "Basic Auth",
        "credentials": [
          {
            "username": "USERNAME",
            "password": "PASSWORD"
          }
        ]
      }
  - fileName: "http_token_creds.json"
    data: |
      {
        "auth_type": "Token Auth",
        "credentials": [
          {
            "tokenName": "TOKEN1",
            "tokenValue": "VALUE1"
          }
        ]
      }
  - fileName: "jenkins_creds.json"
    data: |
      {
        "auth_type": "Token Auth",
        "credentials": [
          {
            "username": "localhost:7233",
            "token": "TOKEN",
            "domain": "DOMAIN"
          }
        ]
      }
  - fileName: "creds.pgpass"
    data: |
      {
        "auth_type": "Token Auth",
        "credentials": [
          {
            "tokenName": "host",
            "tokenValue": "HOST"
          },
          {
            "tokenName": "port",
            "tokenValue": "5432"
          },
          {
            "tokenName": "user",
            "tokenValue": "USER"
          },
          {
            "tokenName": "password",
            "tokenValue": "PASSWORD"
          },
          {
            "tokenName": "database",
            "tokenValue": "DATABASE"
          },
          {
            "tokenName": "sslmode",
            "tokenValue": "verify-full"
          },
          {
            "tokenName": "applicationName",
            "tokenValue": "OPTIONAL: application name"
          },
          {
            "tokenName": "searchPath",
            "tokenValue": "OPTIONAL: search path"
          }
        ]
      }
  - fileName: "temporal_mtls_creds.json"
    data: |
      {
        "auth_type": "Token Auth",
        "credentials": [
          {
            "tokenName": "serverAddress",
            "tokenValue": "SERVERADDRESS"
          },
          {
            "tokenName": "serverNameOverride",
            "tokenValue": "SERVERNAMEOERRIDE"
          },
          {
            "tokenName": "serverRootCACertificate",
            "tokenValue": "SERVERROOTCACERTIFICATE"
          },
          {
            "tokenName": "clientCertPairCrt",
            "tokenValue": "CLIENTCERTPAIRCRT"
          },
          {
            "tokenName": "clientCertPairKey",
            "tokenValue": "CLIENTCERTPAIRKEY"
          }
        ]
      }
  - fileName: "temporal_tls_creds.json"
    data: |
      {
        "auth_type": "Token Auth",
        "credentials": [
          {
            "tokenName": "serverAddress",
            "tokenValue": "SERVERADDRESS"
          },
          {
            "tokenName": "serverNameOverride",
            "tokenValue": "SERVERNAMEOERRIDE"
          },
          {
            "tokenName": "serverRootCACertificate",
            "tokenValue": "CLIENTCERTPAIRKEY"
          }
        ]
      }
