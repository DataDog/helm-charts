{{- define "container-process-agent" -}}
- name: process-agent
  image: "{{ .Values.agents.image.repository }}:{{ .Values.agents.image.tag }}"
  imagePullPolicy: {{ .Values.agents.image.pullPolicy }}
  {{- if eq .Values.targetSystem "linux" }}
  command: ["process-agent", "-config={{ template "datadog.confPath" . }}/datadog.yaml"]
  {{- end }}
  {{- if eq .Values.targetSystem "windows" }}
  command: ["process-agent", "-foreground", "-config={{ template "datadog.confPath" . }}/datadog.yaml"]
  {{- end }}
  {{- if .Values.agents.containers.processAgent.securityContext }}
  securityContext:
    {{ toYaml .Values.agents.containers.processAgent.securityContext | nindent 4 }}
  {{- end }}
  resources:
{{ toYaml .Values.agents.containers.processAgent.resources | indent 4 }}
{{- if .Values.datadog.envFrom }}
  envFrom:
{{ toYaml .Values.datadog.envFrom | indent 4 }}
{{- end }}
  env:
    {{- include "containers-common-env" . | nindent 4 }}
    {{- if .Values.datadog.processAgent.processCollection }}
    - name: DD_PROCESS_AGENT_ENABLED
      value: "true"
    {{- end }}
    - name: DD_LOG_LEVEL
      value: {{ .Values.agents.containers.processAgent.logLevel | default .Values.datadog.logLevel | quote }}
    - name: DD_SYSTEM_PROBE_ENABLED
      value: {{ (or .Values.datadog.systemProbe.enabled .Values.datadog.networkMonitoring.enabled) | quote }}
    {{- if .Values.datadog.networkMonitoring.enabled }}
    - name: DD_SYSTEM_PROBE_NETWORK_ENABLED
      value: {{ .Values.datadog.networkMonitoring.enabled | quote }}
    {{- end }}
    - name: DD_ORCHESTRATOR_EXPLORER_ENABLED
      value: {{ .Values.datadog.orchestratorExplorer.enabled | quote }}
    {{- if .Values.datadog.orchestratorExplorer.enabled }}
    - name: DD_ORCHESTRATOR_CLUSTER_ID
      valueFrom:
        configMapKeyRef:
          name: datadog-cluster-id
          key: id
    {{- end }}
{{- if .Values.agents.containers.processAgent.env }}
{{ toYaml .Values.agents.containers.processAgent.env | indent 4 }}
{{- end }}
  volumeMounts:
    - name: config
      mountPath: {{ template "datadog.confPath" . }}
    {{- if eq .Values.targetSystem "linux" }}
    - name: runtimesocketdir
      mountPath: {{ print "/host/" (dir (include "datadog.dockerOrCriSocketPath" .)) | clean }}
      mountPropagation: {{ .Values.datadog.hostVolumeMountPropagation }}
      readOnly: true
    {{- end }}
    {{- if eq .Values.targetSystem "windows" }}
    - name: runtimesocket
      mountPath: {{ template "datadog.dockerOrCriSocketPath" . }}
    {{- end }}
    {{- if .Values.agents.useConfigMap }}
    - name: {{ template "datadog.fullname" . }}-datadog-yaml
      mountPath: {{ template "datadog.confPath" . }}/datadog.yaml
      subPath: datadog.yaml
    {{- end }}
    {{- if eq .Values.targetSystem "linux" }}
    - name: cgroups
      mountPath: /host/sys/fs/cgroup
      mountPropagation: {{ .Values.datadog.hostVolumeMountPropagation }}
      readOnly: true
    - name: passwd
      mountPath: /etc/passwd
    - name: procdir
      mountPath: /host/proc
      mountPropagation: {{ .Values.datadog.hostVolumeMountPropagation }}
      readOnly: true
    {{- if eq (include "should-enable-system-probe" .) "true" }}
    - name: sysprobe-socket-dir
      mountPath: /var/run/sysprobe
      readOnly: true
    - name: sysprobe-config
      mountPath: /etc/datadog-agent/system-probe.yaml
      subPath: system-probe.yaml
    {{- end }}
    {{- end }}
{{- if .Values.agents.volumeMounts }}
{{ toYaml .Values.agents.volumeMounts | indent 4 }}
{{- end }}
{{- end -}}
