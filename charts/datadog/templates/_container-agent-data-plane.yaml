{{- define "container-agent-data-plane" -}}
- name: agent-data-plane
  image: "{{ include "image-path" (dict "root" .Values "image" .Values.agents.image) }}"
  imagePullPolicy: {{ .Values.agents.image.pullPolicy }}
  command: ["agent-data-plane"]
{{ include "generate-security-context" (dict "securityContext" .Values.agents.containers.agentDataPlane.securityContext "targetSystem" .Values.targetSystem "seccomp" "" "kubeversion" .Capabilities.KubeVersion.Version) | indent 2 }}
{{- if .Values.agents.containers.agentDataPlane.ports }}
  ports:
{{ toYaml .Values.agents.containers.agentDataPlane.ports | indent 2 }}
{{- end }}
  resources:
{{ toYaml .Values.agents.containers.agentDataPlane.resources | indent 4 }}
{{- if or .Values.datadog.envFrom .Values.agents.containers.agentDataPlane.envFrom }}
  envFrom:
{{- if .Values.datadog.envFrom }}
{{ .Values.datadog.envFrom | toYaml | indent 4 }}
{{- end }}
{{- if .Values.agents.containers.agentDataPlane.envFrom }}
{{ .Values.agents.containers.agentDataPlane.envFrom | toYaml | indent 4 }}
{{- end }}
{{- end }}
  env:
    {{- include "containers-common-env" . | nindent 4 }}
    {{- include "containers-cluster-agent-env" . | nindent 4 }}
    {{- include "fips-envvar" . | nindent 4 }}
    - name: DD_LOG_LEVEL
      value: {{ .Values.agents.containers.agentDataPlane.logLevel | default .Values.datadog.logLevel | quote }}
    {{- include "containers-dogstatsd-env" . | nindent 4 }}
    {{- if eq .Values.targetSystem "linux" }}
    - name: DD_DOGSTATSD_SOCKET
      value: {{ .Values.datadog.dogstatsd.socketPath | quote }}
    {{- end }}
    {{- include "additional-env-entries" .Values.agents.containers.agentDataPlane.env | indent 4 }}
    {{- include "additional-env-dict-entries" .Values.agents.containers.agentDataPlane.envDict | indent 4 }}
  volumeMounts:
    - name: config
      mountPath: {{ template "datadog.confPath" . }}
      readOnly: true
    - name: logdatadog
      mountPath: {{ template "datadog.logDirectoryPath" . }}
      readOnly: false # Need RW to write logs
    {{- if eq .Values.targetSystem "linux" }}
    {{- if (not .Values.providers.gke.autopilot) }}
    - name: auth-token
      mountPath: {{ template "datadog.confPath" . }}/auth
      readOnly: true
    - name: dsdsocket
      mountPath: {{ (dir .Values.datadog.dogstatsd.socketPath) }}
      readOnly: false # Need RW for UDS DSD socket
    {{- end }}
    - name: tmpdir
      mountPath: /tmp
      readOnly: false # Need RW to write to tmp directory
    {{- include "linux-container-host-release-volumemounts" . | nindent 4 }}
    {{- end }}
    {{- include "container-crisocket-volumemounts" . | nindent 4 }}
    {{- include "container-cloudinit-volumemounts" . | nindent 4 }}
    {{- if and .Values.agents.useConfigMap (eq .Values.targetSystem "linux")}}
    - name: datadog-yaml
      mountPath: {{ template "datadog.confPath" . }}/datadog.yaml
      subPath: datadog.yaml
      readOnly: true
    {{- end }}
    {{- if eq .Values.targetSystem "linux" }}
    - name: cgroups
      mountPath: /host/sys/fs/cgroup
      mountPropagation: {{ .Values.datadog.hostVolumeMountPropagation }}
      readOnly: true
    - name: procdir
      mountPath: /host/proc
      mountPropagation: {{ .Values.datadog.hostVolumeMountPropagation }}
      readOnly: true
    {{- end }}
    {{- if .Values.datadog.kubelet.hostCAPath }}
{{ include "datadog.kubelet.volumeMount" . | indent 4 }}
    {{- end }}
{{- if .Values.agents.volumeMounts }}
{{ toYaml .Values.agents.volumeMounts | indent 4 }}
{{- end }}
{{- end -}}
