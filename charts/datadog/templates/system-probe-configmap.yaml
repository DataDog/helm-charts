{{- if .Values.datadog.networkMonitoring.enabled }}
{{- if not .Values.agents.image.doNotCheckTag -}}
{{- $version := (.Values.agents.image.tag | toString | trimSuffix "-jmx") }}
{{- $length := len (split "." $version ) -}}
{{- if (gt $length 1) }}
{{- if not (semverCompare "^6.24.1-0 || ^7.24.1-0" $version) -}}
{{- fail "datadog.networkMonitoring.enabled requires agent >= 7.24.1" }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}


{{- if eq (include "should-enable-system-probe" .) "true" }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "datadog.fullname" . }}-system-probe-config
  namespace: {{ $.Release.Namespace }}
  labels:
{{ include "datadog.labels" . | indent 4 }}
data:
  system-probe.yaml: |
    system_probe_config:
      enabled: true
      debug_port:  {{ $.Values.datadog.systemProbe.debugPort }}
      sysprobe_socket: /var/run/sysprobe/sysprobe.sock
      enable_conntrack: {{ $.Values.datadog.systemProbe.enableConntrack }}
      bpf_debug: {{ $.Values.datadog.systemProbe.bpfDebug }}
      enable_tcp_queue_length: {{ $.Values.datadog.systemProbe.enableTCPQueueLength }}
      enable_oom_kill: {{ $.Values.datadog.systemProbe.enableOOMKill }}
      collect_dns_stats: {{ $.Values.datadog.systemProbe.collectDNSStats }}
      max_tracked_connections: {{ $.Values.datadog.systemProbe.maxTrackedConnections }}
      conntrack_max_state_size: {{ $.Values.datadog.systemProbe.conntrackMaxStateSize }}
      enable_runtime_compiler: {{ $.Values.datadog.systemProbe.enableRuntimeCompiler }}
      enable_kernel_header_download: {{ $.Values.datadog.systemProbe.enableKernelHeaderDownload }}
      runtime_compiler_output_dir: {{ $.Values.datadog.systemProbe.runtimeCompilationAssetDir }}/build
      kernel_header_download_dir: {{ $.Values.datadog.systemProbe.runtimeCompilationAssetDir }}/kernel-headers
      apt_config_dir: /host/etc/apt
      yum_repos_dir: /host/etc/yum.repos.d
      zypper_repos_dir: /host/etc/zypp/repos.d
    network_config:
      enabled: {{ $.Values.datadog.networkMonitoring.enabled }}
      conntrack_init_timeout: {{ $.Values.datadog.systemProbe.conntrackInitTimeout }}
    service_monitoring_config:
      enabled: {{ $.Values.datadog.serviceMonitoring.enabled }}
    runtime_security_config:
      enabled: {{ $.Values.datadog.securityAgent.runtime.enabled }}
      fim_enabled: {{ $.Values.datadog.securityAgent.runtime.fimEnabled }}
      socket: /var/run/sysprobe/runtime-security.sock
      policies:
        dir: /etc/datadog-agent/runtime-security.d
      syscall_monitor:
        enabled: {{ $.Values.datadog.securityAgent.runtime.syscallMonitor.enabled }}
      network:
        enabled: {{ $.Values.datadog.securityAgent.runtime.network.enabled }}
{{- if .Values.datadog.securityAgent.runtime.activityDump.enabled }}
      activity_dump:
        enabled: true
        traced_cgroups_count: {{ $.Values.datadog.securityAgent.runtime.activityDump.tracedCgroupsCount }}
        cgroup_dump_timeout: {{ $.Values.datadog.securityAgent.runtime.activityDump.cgroupDumpTimeout }}
        cgroup_wait_list_size:  {{ $.Values.datadog.securityAgent.runtime.activityDump.cgroupWaitListSize }}
        path_merge:
          enabled: {{ $.Values.datadog.securityAgent.runtime.activityDump.pathMerge.enabled }}
{{ else }}
      activity_dump:
        enabled: false
        traced_cgroups_count: 0
{{ end }}

{{- if eq .Values.datadog.systemProbe.seccomp "localhost/system-probe" }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "datadog.fullname" . }}-security
  namespace: {{ $.Release.Namespace }}
  labels:
{{ include "datadog.labels" . | indent 4 }}
data:
  system-probe-seccomp.json: |
    {
      "defaultAction": "SCMP_ACT_ERRNO",
      "syscalls": [
        {
          "names": [
            "accept4",
            "access",
            "arch_prctl",
            "bind",
            "bpf",
            "brk",
            "capget",
            "capset",
            "chdir",
            "chmod",
            "clock_gettime",
            "clone",
            "clone3",
            "close",
            "connect",
            "copy_file_range",
            "creat",
            "dup",
            "dup2",
            "dup3",
            "epoll_create",
            "epoll_create1",
            "epoll_ctl",
            "epoll_ctl_old",
            "epoll_pwait",
            "epoll_wait",
            "epoll_wait_old",
            "eventfd",
            "eventfd2",
            "execve",
            "execveat",
            "exit",
            "exit_group",
            "faccessat",
            "faccessat2",
            "fchmod",
            "fchmodat",
            "fchown",
            "fchown32",
            "fchownat",
            "fcntl",
            "fcntl64",
            "flock",
            "fstat",
            "fstat64",
            "fstatfs",
            "fsync",
            "futex",
            "getcwd",
            "getdents",
            "getdents64",
            "getegid",
            "geteuid",
            "getgid",
            "getgroups",
            "getpeername",
            "getpgrp",
            "getpid",
            "getppid",
            "getpriority",
            "getrandom",
            "getresgid",
            "getresgid32",
            "getresuid",
            "getresuid32",
            "getrlimit",
            "getrusage",
            "getsid",
            "getsockname",
            "getsockopt",
            "gettid",
            "gettimeofday",
            "getuid",
            "getxattr",
            "ioctl",
            "ipc",
            "listen",
            "lseek",
            "lstat",
            "lstat64",
            "madvise",
            "mkdir",
            "mkdirat",
            "mmap",
            "mmap2",
            "mprotect",
            "mremap",
            "munmap",
            "nanosleep",
            "newfstatat",
            "open",
            "openat",
            "openat2",
            "pause",
            "perf_event_open",
            "pipe",
            "pipe2",
            "poll",
            "ppoll",
            "prctl",
            "pread64",
            "prlimit64",
            "pselect6",
            "read",
            "readlink",
            "readlinkat",
            "recvfrom",
            "recvmmsg",
            "recvmsg",
            "rename",
            "renameat",
            "renameat2",
            "restart_syscall",
            "rmdir",
            "rseq",
            "rt_sigaction",
            "rt_sigpending",
            "rt_sigprocmask",
            "rt_sigqueueinfo",
            "rt_sigreturn",
            "rt_sigsuspend",
            "rt_sigtimedwait",
            "rt_tgsigqueueinfo",
            "sched_getaffinity",
            "sched_yield",
            "seccomp",
            "select",
            "semtimedop",
            "send",
            "sendmmsg",
            "sendmsg",
            "sendto",
            "set_robust_list",
            "set_tid_address",
            "setgid",
            "setgid32",
            "setgroups",
            "setgroups32",
            "setitimer",
            "setns",
            "setpgid",
            "setrlimit",
            "setsid",
            "setsidaccept4",
            "setsockopt",
            "setuid",
            "setuid32",
            "sigaltstack",
            "socket",
            "socketcall",
            "socketpair",
            "stat",
            "stat64",
            "statfs",
            "symlinkat",
            "sysinfo",
            "tgkill",
            "umask",
            "uname",
            "unlink",
            "unlinkat",
            "wait4",
            "waitid",
            "waitpid",
            "write"
          ],
          "action": "SCMP_ACT_ALLOW",
          "args": null
        },
        {
          "names": [
            "setns"
          ],
          "action": "SCMP_ACT_ALLOW",
          "args": [
            {
              "index": 1,
              "value": 1073741824,
              "valueTwo": 0,
              "op": "SCMP_CMP_EQ"
            }
          ],
          "comment": "",
          "includes": {},
          "excludes": {}
        },
        {
          "names": [
            "kill"
          ],
          "action": "SCMP_ACT_ALLOW",
          "args": [
            {
              "index": 1,
              "value": 0,
              "op": "SCMP_CMP_EQ"
            }
          ],
          "comment": "allow process detection via kill",
          "includes": {},
          "excludes": {}
        }
      ]
    }
{{- end }}
{{- end }}
