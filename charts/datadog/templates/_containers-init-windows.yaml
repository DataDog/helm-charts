{{- define "containers-init-windows" -}}
- name: init-volume
  image: "{{ include "image-path" (dict "root" .Values "image" .Values.agents.image) }}"
  imagePullPolicy: {{ .Values.agents.image.pullPolicy }}
  command: ["pwsh", "-Command"]
  args:
    - |
      Copy-Item -Recurse -Force {{ template "datadog.confPath" . }} C:/Temp
      Copy-Item -Force C:/Temp/install_info/install_info C:/Temp/Datadog/install_info
      {{- if .Values.agents.useConfigMap }}
      Copy-Item -Force C:/Temp/datadog_yaml/datadog.yaml C:/Temp/Datadog/datadog.yaml
      {{- end}}
  volumeMounts:
    - name: config
      mountPath: C:/Temp/Datadog
      readOnly: false # Need RW for config path
    - name: installinfo
      mountPath: C:/Temp/install_info
      readOnly: true
    {{- if .Values.agents.useConfigMap }}
    - name: datadog-yaml
      mountPath: C:/Temp/datadog_yaml
      readOnly: true
    {{- end}}
  resources:
{{ toYaml .Values.agents.containers.initContainers.resources | indent 4 }}
- name: init-config
  image: "{{ include "image-path" (dict "root" .Values "image" .Values.agents.image) }}"
  imagePullPolicy: {{ .Values.agents.image.pullPolicy }}
  command: ["pwsh", "-Command"]
  args:
    - Get-ChildItem 'entrypoint-ps1' | ForEach-Object { & $_.FullName if (-Not $?) { exit 1 } }
  volumeMounts:
    - name: config
      mountPath: {{ template "datadog.confPath" . }}
      readOnly: false # Need RW for config path
    {{- if (or (.Values.datadog.confd) (.Values.datadog.autoconf)) }}
    - name: confd
      mountPath: C:/conf.d
      readOnly: true
    {{- end }}
    {{- if .Values.datadog.checksd }}
    - name: checksd
      mountPath: C:/checks.d
      readOnly: true
    {{- end }}
    {{- include "container-crisocket-volumemounts" . | nindent 4 }}
  env:
    {{- include "containers-common-env" . | nindent 4 }}
  resources:
{{ toYaml .Values.agents.containers.initContainers.resources | indent 4 }}
{{- end -}}
