{{- if .Values.otelAgentGateway.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "datadog.fullname" . }}-otel-agent-gateway
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "datadog.labels" . | indent 4 }}
    app.kubernetes.io/component: otel-agent-gateway
    {{- if .Values.otelAgentGateway.additionalLabels }}
{{ toYaml .Values.otelAgentGateway.additionalLabels | indent 4 }}
    {{- end }}
{{ include "provider-labels" . | indent 4 }}
  {{- if .Values.otelAgentGateway.deploymentAnnotations }}
  annotations: {{ toYaml .Values.otelAgentGateway.deploymentAnnotations | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.otelAgentGateway.replicas | default 1 }}
  revisionHistoryLimit: {{ .Values.otelAgentGateway.revisionHistoryLimit }}
  strategy:
{{- if .Values.otelAgentGateway.strategy }}
{{ toYaml .Values.otelAgentGateway.strategy | indent 4 }}
{{- else }}
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
{{- end }}
  selector:
    matchLabels:
      app: {{ template "datadog.fullname" . }}-otel-agent-gateway
        {{- if .Values.otelAgentGateway.podLabels }}
{{ toYaml .Values.otelAgentGateway.podLabels | indent 6 }}
        {{- end }}
  template:
    metadata:
      labels:
{{ include "datadog.template-labels" . | indent 8 }}
        app.kubernetes.io/component: otel-agent-gateway
        admission.datadoghq.com/enabled: "false"
        app: {{ template "datadog.fullname" . }}-otel-agent-gateway
        {{- if .Values.otelAgentGateway.podLabels }}
{{ toYaml .Values.otelAgentGateway.podLabels | indent 8 }}
        {{- end }}
        {{- if .Values.otelAgentGateway.additionalLabels }}
{{ toYaml .Values.otelAgentGateway.additionalLabels | indent 8 }}
        {{- end }}
{{ include "provider-labels" . | indent 8 }}
      name: {{ template "datadog.fullname" . }}-otel-agent-gateway
      annotations:
        {{- if .Values.agents.customAgentConfig }}
        checksum/agent-config: {{ tpl (toYaml .Values.agents.customAgentConfig) . | sha256sum }}
        {{- end }}
        # It is fine for Gateway Deployment to not have an API key, e.g. in multi-layer Gateway setup.
        {{- if and (not .Values.datadog.apiKeyExistingSecret) (.Values.datadog.apiKey) }}
        checksum/api_key: {{ include (print $.Template.BasePath "/secret-api-key.yaml") . | sha256sum }}
        {{- end }}
        checksum/install_info: {{ printf "%s-%s" .Chart.Name .Chart.Version | sha256sum }}
        checksum/otel-gateway-config: {{ include "otel-agent-gateway-config-configmap-content" . | sha256sum }}
      {{- if .Values.otelAgentGateway.podAnnotations }}
{{ tpl (toYaml .Values.otelAgentGateway.podAnnotations) . | indent 8 }}
      {{- end }}
    spec:
      {{- if .Values.otelAgentGateway.shareProcessNamespace }}
      shareProcessNamespace: {{ .Values.otelAgentGateway.shareProcessNamespace }}
      {{- end }}
      {{- if .Values.otelAgentGateway.priorityClassName }}
      priorityClassName: "{{ .Values.otelAgentGateway.priorityClassName }}"
      {{- end }}
      {{- if .Values.otelAgentGateway.image.pullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.otelAgentGateway.image.pullSecrets | indent 8 }}
      {{- end }}
      {{- if .Values.otelAgentGateway.useHostNetwork }}
      hostNetwork: {{ .Values.otelAgentGateway.useHostNetwork }}
      dnsPolicy: ClusterFirstWithHostNet
      {{- end }}
      {{- if .Values.otelAgentGateway.dnsConfig }}
      dnsConfig:
{{ toYaml .Values.otelAgentGateway.dnsConfig | indent 8 }}
      {{- end }}
      initContainers:
      - name: init-volume
        image: "{{ include "ddot-collector-image" . }}"
        imagePullPolicy: {{ .Values.otelAgentGateway.image.pullPolicy }}
        command:
          - cp
          - -r
        args:
          - /etc/datadog-agent
          - /opt     
        volumeMounts:
          - name: config
            mountPath: /opt/datadog-agent
      containers:
      - name: otel-agent
        image: "{{ include "ddot-collector-image" . }}"
        imagePullPolicy: {{ .Values.otelAgentGateway.image.pullPolicy }}
        {{- if .Values.otelAgentGateway.lifecycle }}
        lifecycle:
      {{ toYaml .Values.otelAgentGateway.lifecycle | indent 10 }}
        {{- end }}
        {{- if eq .Values.targetSystem "linux" }}
        command:
          - "otel-agent"
          {{- if and .Values.agents.useConfigMap (eq .Values.targetSystem "linux")}}
          - "--core-config={{ template "datadog.confPath" .  }}/datadog.yaml"
          {{- end }}
          - "--sync-delay=30s"
        args:
          {{- if .Values.otelAgentGateway.configMap.items }}
          {{- range .Values.otelAgentGateway.configMap.items }}
          - "--config={{ template "datadog.otelconfPath" $ }}/{{ .path }}"
          {{- end }}
          {{- else }}
          - "--config={{ template "datadog.otelconfPath" . }}/otel-gateway-config.yaml"
          {{- end }}
          {{- if .Values.otelAgentGateway.featureGates }}
          - "--feature-gates={{ .Values.otelAgentGateway.featureGates }}"
          {{- end }}
        {{- end -}}
        {{- if eq .Values.targetSystem "windows" }}
        command:
          - "otel-agent"
          - "-foreground"
          # - "--core-config={{ template "datadog.confPath" .  }}/datadog.yaml"
          - "--sync-delay=30s"
          {{- if .Values.otelAgentGateway.configMap.items }}
          {{- range .Values.otelAgentGateway.configMap.items }}
          - "-config={{ template "datadog.otelconfPath" $ }}/{{ .path }}"
          {{- end }}
          {{- else }}
          - "-config={{ template "datadog.otelconfPath" . }}/otel-gateway-config.yaml"
          {{- end }}
          {{- if .Values.otelAgentGateway.featureGates }}
          - "--feature-gates={{ .Values.otelAgentGateway.featureGates }}"
          {{- end }}
        {{- end -}}
      {{ include "generate-security-context" (dict "securityContext" .Values.otelAgentGateway.containers.otelAgent.securityContext "targetSystem" .Values.targetSystem "seccomp" "" "kubeversion" .Capabilities.KubeVersion.Version) | indent 2 }}
        resources:
      {{ toYaml .Values.otelAgentGateway.containers.otelAgent.resources | indent 10 }}
        ports:
          {{- range .Values.otelAgentGateway.ports }}
            - containerPort: {{ .containerPort }}
              {{- if .hostPort }}
              hostPort: {{ .hostPort }}
              {{- end }}
              protocol: {{ .protocol | default "TCP" }}
              name: {{ .name }}
          {{- end }}
      {{- if .Values.otelAgentGateway.containers.otelAgent.ports }}
      {{ toYaml .Values.otelAgentGateway.containers.otelAgent.ports | indent 10 }}
      {{- end }}
      {{- if .Values.otelAgentGateway.containers.otelAgent.envFrom }}
        envFrom:
      {{ .Values.otelAgentGateway.containers.otelAgent.envFrom | toYaml | indent 10 }}
      {{- end }}
        env:
          # It is fine for Gateway Deployment to not have an API key, e.g. in multi-layer Gateway setup.
          {{- if (or (.Values.datadog.apiKeyExistingSecret) (.Values.datadog.apiKey)) }}
          - name: DD_API_KEY
            valueFrom:
              secretKeyRef:
                name: {{ template "datadog.apiSecretName" . }}
                key: api-key
          {{- end }}
          - name: DD_OTELCOLLECTOR_ENABLED
            value: "true"
          - name: DD_HOSTNAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: DD_OTELCOLLECTOR_CONVERTER_FEATURES
            # TODO(songy23): add datadog extension once it is included in otel-agent
            value: "health_check,zpages,pprof" # exclude infra attribute, prometheus and DD flare

          # Disable features that are not needed / won't work in standalone ddot-collector
          - name: DD_ENABLE_METADATA_COLLECTION
            value: "false"
          - name: DD_PROCESS_AGENT_ENABLED
            value: "false"
          - name: DD_PROCESS_CONFIG_RUN_IN_CORE_AGENT_ENABLED
            value: "false"
          - name: DD_REMOTE_CONFIGURATION_ENABLED
            value: "false"
          - name: DD_AGENT_IPC_PORT
            value: "0"
          - name: DD_AGENT_IPC_CONFIG_REFRESH_INTERVAL
            value: "0"
          - name: DD_LOG_LEVEL
            value: {{ .Values.otelAgentGateway.containers.otelAgent.logLevel | default .Values.datadog.logLevel | quote }}
          {{- include "additional-env-entries" .Values.otelAgentGateway.containers.otelAgent.env | indent 10 }}
          {{- include "additional-env-dict-entries" .Values.otelAgentGateway.containers.otelAgent.envDict | indent 10 }}
        volumeMounts:
          - name: otelgatewayconfig
            mountPath: {{ template "datadog.otelconfPath" . }}
            readOnly: true
          - name: varlog
            mountPath: /var/log/datadog
            readOnly: false
          - name: tmpdir
            mountPath: /tmp
            readOnly: false
          - name: config
            mountPath: {{ template "datadog.confPath" . }}
            readOnly: true
          {{- if and .Values.agents.useConfigMap (eq .Values.targetSystem "linux")}}
          - name: datadog-yaml
            mountPath: {{ template "datadog.confPath" . }}/datadog.yaml
            subPath: datadog.yaml
            readOnly: true
          {{- end }}
      {{- if .Values.otelAgentGateway.volumeMounts }}
      {{ toYaml .Values.otelAgentGateway.volumeMounts | indent 10 }}
      {{- end }}
      volumes:
      - name: varlog
        emptyDir: {}
      - name: tmpdir
        emptyDir: {}
      - name: config
        emptyDir: {}
      - name: otelgatewayconfig
        configMap:
          {{- if .Values.otelAgentGateway.configMap.name }}
          name: {{ .Values.otelAgentGateway.configMap.name }}
          {{- if .Values.otelAgentGateway.configMap.items }}
          items:
            {{- range .Values.otelAgentGateway.configMap.items }}
            - key: {{ .key }}
              path: {{ .path }}
            {{- end }}
          {{- else if .Values.otelAgentGateway.configMap.key }}
          items:
            - key: {{ .Values.otelAgentGateway.configMap.key }}
              path: otel-gateway-config.yaml
          {{- end }}
          {{- else }}
          name: {{ include "agents-install-otel-gateway-configmap-name" . }}
          items:
            - key: otel-gateway-config.yaml
              path: otel-gateway-config.yaml
          {{- end }}
{{- if .Values.otelAgentGateway.volumes }}
{{ toYaml .Values.otelAgentGateway.volumes | indent 8 }}
{{- end }}
      {{- if .Values.otelAgentGateway.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.otelAgentGateway.terminationGracePeriodSeconds }}
      {{- end }}
      {{- if .Values.otelAgentGateway.tolerations }}
      tolerations:
{{ toYaml .Values.otelAgentGateway.tolerations | indent 8 }}
      {{- end }}
{{- if .Values.otelAgentGateway.affinity }}
      affinity:
{{ toYaml .Values.otelAgentGateway.affinity | indent 8 }}
{{- end }}
      nodeSelector:
        {{ template "label.os" . }}: {{ .Values.targetSystem }}
      {{- if .Values.otelAgentGateway.nodeSelector }}
{{ toYaml .Values.otelAgentGateway.nodeSelector | indent 8 }}
      {{- end }}
      {{- with .Values.otelAgentGateway.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{ end }}
