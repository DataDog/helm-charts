apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/component: agent
    app.kubernetes.io/instance: datadog
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: datadog
    app.kubernetes.io/version: "7"
  name: datadog
  namespace: datadog-agent
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: datadog
  template:
    metadata:
      annotations: {}
      labels:
        admission.datadoghq.com/enabled: "false"
        app: datadog
        app.kubernetes.io/component: agent
        app.kubernetes.io/instance: datadog
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: datadog
      name: datadog
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
        - command:
            - agent
            - run
          env:
            - name: DD_API_KEY
              valueFrom:
                secretKeyRef:
                  key: api-key
                  name: datadog-secret
            - name: DD_REMOTE_CONFIGURATION_ENABLED
              value: "true"
            - name: DD_AUTH_TOKEN_FILE_PATH
              value: C:/ProgramData/Datadog/auth/token
            - name: KUBERNETES
              value: "yes"
            - name: DD_LANGUAGE_DETECTION_ENABLED
              value: "false"
            - name: DD_LANGUAGE_DETECTION_REPORTING_ENABLED
              value: "false"
            - name: DD_KUBERNETES_KUBELET_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: DD_OTLP_CONFIG_LOGS_ENABLED
              value: "false"
            - name: DD_PROCESS_CONFIG_PROCESS_COLLECTION_ENABLED
              value: "false"
            - name: DD_PROCESS_CONFIG_CONTAINER_COLLECTION_ENABLED
              value: "true"
            - name: DD_PROCESS_AGENT_DISCOVERY_ENABLED
              value: "true"
            - name: DD_STRIP_PROCESS_ARGS
              value: "false"
            - name: DD_LOG_LEVEL
              value: INFO
            - name: DD_DOGSTATSD_PORT
              value: "8125"
            - name: DD_DOGSTATSD_NON_LOCAL_TRAFFIC
              value: "true"
            - name: DD_DOGSTATSD_TAG_CARDINALITY
              value: low
            - name: DD_CLUSTER_AGENT_ENABLED
              value: "true"
            - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
              value: datadog-cluster-agent
            - name: DD_CLUSTER_AGENT_AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  key: token
                  name: datadog-cluster-agent
            - name: DD_APM_ENABLED
              value: "false"
            - name: DD_LOGS_ENABLED
              value: "false"
            - name: DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL
              value: "false"
            - name: DD_LOGS_CONFIG_K8S_CONTAINER_USE_FILE
              value: "true"
            - name: DD_LOGS_CONFIG_AUTO_MULTI_LINE_DETECTION
              value: "false"
            - name: DD_HEALTH_PORT
              value: "5555"
            - name: DD_EXTRA_CONFIG_PROVIDERS
              value: clusterchecks endpointschecks
            - name: DD_IGNORE_AUTOCONF
              value: kubernetes_state
            - name: DD_CONTAINER_LIFECYCLE_ENABLED
              value: "true"
            - name: DD_ORCHESTRATOR_EXPLORER_ENABLED
              value: "true"
            - name: DD_EXPVAR_PORT
              value: "6000"
            - name: DD_COMPLIANCE_CONFIG_ENABLED
              value: "false"
            - name: DD_CONTAINER_IMAGE_ENABLED
              value: "true"
            - name: DD_KUBELET_CORE_CHECK_ENABLED
              value: "true"
            - name: DD_KUBERNETES_KUBELET_PODRESOURCES_SOCKET
              value: /var/lib/kubelet/pod-resources/kubelet.sock
            - name: DD_SYSTEM_PROBE_ENABLED
              value: "false"
          image: gcr.io/datadoghq/agent:7.64.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /live
              port: 5555
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          name: agent
          ports:
            - containerPort: 8125
              name: dogstatsdport
              protocol: UDP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /ready
              port: 5555
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          startupProbe:
            failureThreshold: 6
            httpGet:
              path: /startup
              port: 5555
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          volumeMounts:
            - mountPath: C:/ProgramData/Datadog/logs
              name: logdatadog
              readOnly: false
            - mountPath: C:/ProgramData/Datadog
              name: config
              readOnly: false
            - mountPath: C:/ProgramData/Datadog/auth
              name: auth-token
              readOnly: false
            - mountPath: \\.\pipe\docker_engine
              name: runtimesocket
            - mountPath: \\.\pipe\containerd-containerd
              name: containerdsocket
        - command:
            - process-agent
            - -foreground
            - --cfgpath=C:/ProgramData/Datadog/datadog.yaml
          env:
            - name: DD_API_KEY
              valueFrom:
                secretKeyRef:
                  key: api-key
                  name: datadog-secret
            - name: DD_REMOTE_CONFIGURATION_ENABLED
              value: "true"
            - name: DD_AUTH_TOKEN_FILE_PATH
              value: C:/ProgramData/Datadog/auth/token
            - name: KUBERNETES
              value: "yes"
            - name: DD_LANGUAGE_DETECTION_ENABLED
              value: "false"
            - name: DD_LANGUAGE_DETECTION_REPORTING_ENABLED
              value: "false"
            - name: DD_KUBERNETES_KUBELET_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: DD_OTLP_CONFIG_LOGS_ENABLED
              value: "false"
            - name: DD_CLUSTER_AGENT_ENABLED
              value: "true"
            - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
              value: datadog-cluster-agent
            - name: DD_CLUSTER_AGENT_AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  key: token
                  name: datadog-cluster-agent
            - name: DD_PROCESS_CONFIG_PROCESS_COLLECTION_ENABLED
              value: "false"
            - name: DD_PROCESS_CONFIG_CONTAINER_COLLECTION_ENABLED
              value: "true"
            - name: DD_PROCESS_AGENT_DISCOVERY_ENABLED
              value: "true"
            - name: DD_STRIP_PROCESS_ARGS
              value: "false"
            - name: DD_LOG_LEVEL
              value: INFO
            - name: DD_SYSTEM_PROBE_ENABLED
              value: "false"
            - name: DD_ORCHESTRATOR_EXPLORER_ENABLED
              value: "true"
          image: gcr.io/datadoghq/agent:7.64.1
          imagePullPolicy: IfNotPresent
          name: process-agent
          resources: {}
          volumeMounts:
            - mountPath: C:/ProgramData/Datadog
              name: config
              readOnly: true
            - mountPath: C:/ProgramData/Datadog/logs
              name: logdatadog
              readOnly: false
            - mountPath: C:/ProgramData/Datadog/auth
              name: auth-token
              readOnly: true
            - mountPath: \\.\pipe\docker_engine
              name: runtimesocket
            - mountPath: \\.\pipe\containerd-containerd
              name: containerdsocket
      initContainers:
        - args:
            - |
              Copy-Item -Recurse -Force C:/ProgramData/Datadog C:/Temp
              Copy-Item -Force C:/Temp/install_info/install_info C:/Temp/Datadog/install_info
          command:
            - pwsh
            - -Command
          image: gcr.io/datadoghq/agent:7.64.1
          imagePullPolicy: IfNotPresent
          name: init-volume
          resources: {}
          volumeMounts:
            - mountPath: C:/Temp/Datadog
              name: config
              readOnly: false
            - mountPath: C:/Temp/install_info
              name: installinfo
              readOnly: true
        - args:
            - Get-ChildItem 'entrypoint-ps1' | ForEach-Object { & $_.FullName if (-Not $?) { exit 1 } }
          command:
            - pwsh
            - -Command
          env:
            - name: DD_API_KEY
              valueFrom:
                secretKeyRef:
                  key: api-key
                  name: datadog-secret
            - name: DD_REMOTE_CONFIGURATION_ENABLED
              value: "true"
            - name: DD_AUTH_TOKEN_FILE_PATH
              value: C:/ProgramData/Datadog/auth/token
            - name: KUBERNETES
              value: "yes"
            - name: DD_LANGUAGE_DETECTION_ENABLED
              value: "false"
            - name: DD_LANGUAGE_DETECTION_REPORTING_ENABLED
              value: "false"
            - name: DD_KUBERNETES_KUBELET_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: DD_OTLP_CONFIG_LOGS_ENABLED
              value: "false"
          image: gcr.io/datadoghq/agent:7.64.1
          imagePullPolicy: IfNotPresent
          name: init-config
          resources: {}
          volumeMounts:
            - mountPath: C:/ProgramData/Datadog
              name: config
              readOnly: false
            - mountPath: \\.\pipe\docker_engine
              name: runtimesocket
            - mountPath: \\.\pipe\containerd-containerd
              name: containerdsocket
      nodeSelector:
        kubernetes.io/os: windows
      serviceAccountName: datadog
      tolerations:
        - effect: NoSchedule
          key: node.kubernetes.io/os
          operator: Equal
          value: windows
      volumes:
        - emptyDir: {}
          name: auth-token
        - configMap:
            name: datadog-installinfo
          name: installinfo
        - emptyDir: {}
          name: config
        - hostPath:
            path: \\.\pipe\docker_engine
          name: runtimesocket
        - hostPath:
            path: \\.\pipe\containerd-containerd
          name: containerdsocket
        - emptyDir: {}
          name: logdatadog
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 10%
    type: RollingUpdate
---
