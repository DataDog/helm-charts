apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: clusterchecks-agent
    app.kubernetes.io/instance: datadog
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: datadog
    app.kubernetes.io/version: "7"
    helm.sh/chart: datadog-3.98.1
  name: datadog-clusterchecks
  namespace: datadog-agent
spec:
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: datadog-clusterchecks
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/clusteragent_token: 46c57eb56ed9b06c80f95be1db78e7ada68e05d60e70cd05adbe44dce4d458ad
        checksum/install_info: 294ab445dd224b5cc1663ee0737da0a03d9e2d995bc77fd2d21fb358fe1b2eed
      labels:
        admission.datadoghq.com/enabled: "false"
        app: datadog-clusterchecks
        app.kubernetes.io/component: clusterchecks-agent
        app.kubernetes.io/instance: datadog
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: datadog
      name: datadog-clusterchecks
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: datadog-clusterchecks
                topologyKey: kubernetes.io/hostname
              weight: 50
      automountServiceAccountToken: true
      containers:
        - args:
            - find /etc/datadog-agent/conf.d/ -name "*.yaml.default" -type f -delete && touch /etc/datadog-agent/datadog.yaml && exec agent run
          command:
            - bash
            - -c
          env:
            - name: KUBERNETES
              value: "yes"
            - name: DD_API_KEY
              valueFrom:
                secretKeyRef:
                  key: api-key
                  name: datadog-secret
            - name: DD_LOG_LEVEL
              value: INFO
            - name: DD_EXTRA_CONFIG_PROVIDERS
              value: clusterchecks
            - name: DD_HEALTH_PORT
              value: "5557"
            - name: DD_CLUSTER_AGENT_ENABLED
              value: "true"
            - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
              value: datadog-cluster-agent
            - name: DD_CLUSTER_AGENT_AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  key: token
                  name: datadog-cluster-agent
            - name: DD_ENABLE_METADATA_COLLECTION
              value: "false"
            - name: DD_CLC_RUNNER_ENABLED
              value: "true"
            - name: DD_CLC_RUNNER_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: DD_CLC_RUNNER_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: DD_USE_DOGSTATSD
              value: "false"
            - name: DD_PROCESS_AGENT_ENABLED
              value: "false"
            - name: DD_LOGS_ENABLED
              value: "false"
            - name: DD_APM_ENABLED
              value: "false"
            - name: DD_REMOTE_CONFIGURATION_ENABLED
              value: "false"
            - name: DD_HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          image: gcr.io/datadoghq/agent:7.63.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /live
              port: 5557
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          name: agent
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /ready
              port: 5557
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          startupProbe:
            failureThreshold: 6
            httpGet:
              path: /startup
              port: 5557
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          volumeMounts:
            - mountPath: /etc/datadog-agent/install_info
              name: installinfo
              readOnly: true
              subPath: install_info
            - mountPath: /etc/datadog-agent
              name: config
              readOnly: false
      imagePullSecrets: []
      initContainers:
        - args:
            - cp -r /etc/datadog-agent /opt
          command:
            - bash
            - -c
          image: gcr.io/datadoghq/agent:7.63.0
          imagePullPolicy: IfNotPresent
          name: init-volume
          resources: {}
          volumeMounts:
            - mountPath: /opt/datadog-agent
              name: config
              readOnly: false
        - args:
            - for script in $(find /etc/cont-init.d/ -type f -name '*.sh' | sort) ; do bash $script ; done
          command:
            - bash
            - -c
          image: gcr.io/datadoghq/agent:7.63.0
          imagePullPolicy: IfNotPresent
          name: init-config
          resources: {}
          volumeMounts:
            - mountPath: /etc/datadog-agent
              name: config
              readOnly: false
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: datadog-cluster-checks
      volumes:
        - configMap:
            name: datadog-installinfo
          name: installinfo
        - emptyDir: {}
          name: config
---
