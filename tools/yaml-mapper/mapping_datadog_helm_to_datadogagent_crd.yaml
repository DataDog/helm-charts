# This file maps keys from the Datadog Helm chart (YAML) to the DatadogAgent CustomResource spec (YAML).

agents.additionalLabels: spec.override.nodeAgent.labels
agents.affinity: spec.override.nodeAgent.affinity
agents.containers.agent.env: spec.override.nodeAgent.containers.agent.env
agents.containers.agent.envDict: ""
agents.containers.agent.envFrom: ""
agents.containers.agent.healthPort: spec.override.nodeAgent.containers.agent.healthPort
agents.containers.agent.livenessProbe: spec.override.nodeAgent.containers.agent.livenessProbe
agents.containers.agent.livenessProbe.failureThreshold: spec.override.nodeAgent.containers.agent.livenessProbe.failureThreshold
agents.containers.agent.livenessProbe.initialDelaySeconds: spec.override.nodeAgent.containers.agent.livenessProbe.initialDelaySeconds
agents.containers.agent.livenessProbe.periodSeconds: spec.override.nodeAgent.containers.agent.livenessProbe.periodSeconds
agents.containers.agent.livenessProbe.successThreshold: spec.override.nodeAgent.containers.agent.livenessProbe.successThreshold
agents.containers.agent.livenessProbe.timeoutSeconds: spec.override.nodeAgent.containers.agent.livenessProbe.timeoutSeconds
agents.containers.agent.logLevel: spec.override.nodeAgent.containers.agent.logLevel
agents.containers.agent.ports: ""
agents.containers.agent.readinessProbe: spec.override.nodeAgent.containers.agent.readinessProbe
agents.containers.agent.readinessProbe.failureThreshold: spec.override.nodeAgent.containers.agent.readinessProbe.failureThreshold
agents.containers.agent.readinessProbe.initialDelaySeconds: spec.override.nodeAgent.containers.agent.readinessProbe.initialDelaySeconds
agents.containers.agent.readinessProbe.periodSeconds: spec.override.nodeAgent.containers.agent.readinessProbe.periodSeconds
agents.containers.agent.readinessProbe.successThreshold: spec.override.nodeAgent.containers.agent.readinessProbe.successThreshold
agents.containers.agent.readinessProbe.timeoutSeconds: spec.override.nodeAgent.containers.agent.readinessProbe.timeoutSeconds
agents.containers.agent.resources: spec.override.nodeAgent.containers.agent.resources
agents.containers.agent.securityContext: spec.override.nodeAgent.containers.agent.securityContext
agents.containers.agent.startupProbe.failureThreshold: ""
agents.containers.agent.startupProbe.initialDelaySeconds: ""
agents.containers.agent.startupProbe.periodSeconds: ""
agents.containers.agent.startupProbe.successThreshold: ""
agents.containers.agent.startupProbe.timeoutSeconds: ""
agents.containers.initContainers.resources:
- spec.override.nodeAgent.containers.init-config.resources
- spec.override.nodeAgent.containers.init-volume.resources
- spec.override.clusterChecksRunner.containers.init-config.resources
agents.containers.initContainers.securityContext:
- spec.override.nodeAgent.containers.init-config.securityContext
- spec.override.nodeAgent.containers.init-volume.securityContext
- spec.override.clusterChecksRunner.containers.init-config.securityContext
agents.containers.initContainers.volumeMounts:
- spec.override.nodeAgent.containers.init-config.volumeMounts
- spec.override.nodeAgent.containers.init-volume.volumeMounts
- spec.override.clusterChecksRunner.containers.init-config.volumeMounts
agents.containers.otelAgent.env: ""
agents.containers.otelAgent.envFrom: ""
agents.containers.otelAgent.ports: ""
agents.containers.processAgent.env: spec.override.nodeAgent.containers.process-agent.env
agents.containers.processAgent.envDict: ""
agents.containers.processAgent.envFrom: ""
agents.containers.processAgent.logLevel: spec.override.nodeAgent.containers.process-agent.logLevel
agents.containers.processAgent.ports: ""
agents.containers.processAgent.resources: spec.override.nodeAgent.containers.process-agent.resources
agents.containers.processAgent.securityContext: spec.override.nodeAgent.containers.process-agent.securityContext
agents.containers.securityAgent.env: spec.override.nodeAgent.containers.security-agent.env
agents.containers.securityAgent.envDict: ""
agents.containers.securityAgent.envFrom: ""
agents.containers.securityAgent.logLevel: spec.override.nodeAgent.containers.security-agent.logLevel
agents.containers.securityAgent.ports: ""
agents.containers.securityAgent.resources: spec.override.nodeAgent.containers.security-agent.resources
agents.containers.systemProbe.env: spec.override.nodeAgent.containers.system-probe.env
agents.containers.systemProbe.envDict: ""
agents.containers.systemProbe.envFrom: ""
agents.containers.systemProbe.logLevel: spec.override.nodeAgent.containers.system-probe.logLevel
agents.containers.systemProbe.ports: ""
agents.containers.systemProbe.resources: spec.override.nodeAgent.containers.system-probe.resources
agents.containers.systemProbe.securityContext: spec.override.nodeAgent.containers.system-probe.securityContext
agents.containers.systemProbe.securityContext.capabilities.add: spec.override.nodeAgent.containers.system-probe.securityContext.capabilities.add
agents.containers.systemProbe.securityContext.privileged: spec.override.nodeAgent.containers.system-probe.securityContext.privileged
agents.containers.traceAgent.env: spec.override.nodeAgent.containers.trace-agent.env
agents.containers.traceAgent.envDict: ""
agents.containers.traceAgent.envFrom: ""
agents.containers.traceAgent.livenessProbe: spec.override.nodeAgent.containers.trace-agent.livenessProbe
agents.containers.traceAgent.livenessProbe.initialDelaySeconds: spec.override.nodeAgent.containers.trace-agent.livenessProbe.initialDelaySeconds
agents.containers.traceAgent.livenessProbe.periodSeconds: spec.override.nodeAgent.containers.trace-agent.livenessProbe.periodSeconds
agents.containers.traceAgent.livenessProbe.timeoutSeconds: spec.override.nodeAgent.containers.trace-agent.livenessProbe.timeoutSeconds
agents.containers.traceAgent.logLevel: spec.override.nodeAgent.containers.trace-agent.logLevel
agents.containers.traceAgent.ports: ""
agents.containers.traceAgent.resources: spec.override.nodeAgent.containers.trace-agent.resources
agents.containers.traceAgent.securityContext: spec.override.nodeAgent.containers.trace-agent.securityContext
agents.customAgentConfig: spec.override.nodeAgent.customConfigurations.datadog.yaml.configData
agents.daemonsetAnnotations: ""
agents.dnsConfig: spec.override.nodeAgent.dnsConfig
agents.enabled: ""
agents.image.digest: ""
agents.image.doNotCheckTag: ""
agents.image.name: spec.override.nodeAgent.image.name
agents.image.pullPolicy: spec.override.nodeAgent.image.pullPolicy
agents.image.pullSecrets: spec.override.nodeAgent.image.pullSecrets
agents.image.repository: ""
agents.image.tag: spec.override.nodeAgent.image.tag
agents.image.tagSuffix: ""
agents.localService.forceLocalServiceEnabled: spec.global.localService.forceEnableLocalService
agents.localService.overrideName: spec.global.localService.nameOverride
agents.networkPolicy.create: ""
agents.nodeSelector: spec.override.nodeAgent.nodeSelector
agents.podAnnotations: spec.override.nodeAgent.annotations
agents.podLabels: spec.override.nodeAgent.labels
agents.podSecurity.allowedUnsafeSysctls: ""
agents.podSecurity.apparmor.enabled: ""
agents.podSecurity.apparmorProfiles: ""
agents.podSecurity.capabilities: spec.override.nodeAgent.containers.agent.securityContext.capabilities
agents.podSecurity.defaultApparmor: ""
agents.podSecurity.podSecurityPolicy.create: ""
agents.podSecurity.privileged: spec.override.nodeAgent.containers.agent.securityContext.privileged
agents.podSecurity.seLinuxContext: spec.override.nodeAgent.containers.agent.securityContext.seLinuxContext
agents.podSecurity.seLinuxContext.rule: 
agents.podSecurity.seLinuxContext.seLinuxOptions.level: spec.override.nodeAgent.containers.agent.securityContext.seLinuxContext.level
agents.podSecurity.seLinuxContext.seLinuxOptions.role: spec.override.nodeAgent.containers.agent.securityContext.seLinuxContext.role
agents.podSecurity.seLinuxContext.seLinuxOptions.type: spec.override.nodeAgent.containers.agent.securityContext.seLinuxContext.type
agents.podSecurity.seLinuxContext.seLinuxOptions.user: spec.override.nodeAgent.containers.agent.securityContext.seLinuxContext.user
agents.podSecurity.seccompProfiles: ""
agents.podSecurity.securityContextConstraints.create: ""
agents.podSecurity.volumes: ""
agents.priorityClassCreate: ""
agents.priorityClassName: spec.override.nodeAgent.priorityClassName
agents.priorityClassValue: ""
agents.priorityPreemptionPolicyValue: ""
agents.rbac.automountServiceAccountToken: ""
agents.rbac.create: spec.override.nodeAgent.createRbac
agents.rbac.serviceAccountAnnotations: spec.override.nodeAgent.serviceAccountAnnotations
agents.rbac.serviceAccountName: spec.override.nodeAgent.serviceAccountName
agents.revisionHistoryLimit: ""
agents.shareProcessNamespace: ""
agents.tolerations: spec.override.nodeAgent.tolerations
agents.updateStrategy: spec.override.nodeAgent.updateStrategy
agents.updateStrategy.rollingUpdate: spec.override.nodeAgent.updateStrategy.rollingUpdate
agents.updateStrategy.rollingUpdate.maxUnavailable: spec.override.nodeAgent.updateStrategy.rollingUpdate.maxUnavailable
agents.updateStrategy.type: spec.override.nodeAgent.updateStrategy.type
agents.useConfigMap: ""
agents.useHostNetwork: spec.override.nodeAgent.hostNetwork
agents.volumeMounts:
- spec.override.nodeAgent.containers.node-agent.volumeMounts
- spec.override.nodeAgent.containers.process-agent.volumeMounts
- spec.override.nodeAgent.containers.trace-agent.volumeMounts
- spec.override.nodeAgent.containers.system-probe.volumeMounts
- spec.override.nodeAgent.containers.security-agent.volumeMounts
agents.volumes: spec.override.nodeAgent.volumes
clusterAgent.additionalLabels: spec.override.clusterAgent.labels
clusterAgent.admissionController.agentSidecarInjection.clusterAgentCommunicationEnabled: spec.features.admissionController.agentSidecarInjection.clusterAgentCommunicationEnabled 
clusterAgent.admissionController.agentSidecarInjection.containerRegistry: spec.features.admissionController.agentSidecarInjection.registry
clusterAgent.admissionController.agentSidecarInjection.enabled: spec.features.admissionController.agentSidecarInjection.enabled
clusterAgent.admissionController.agentSidecarInjection.imageName: spec.features.admissionController.agentSidecarInjection.image.name
clusterAgent.admissionController.agentSidecarInjection.imageTag: spec.features.admissionController.agentSidecarInjection.image.tag
clusterAgent.admissionController.agentSidecarInjection.profiles: spec.features.admissionController.agentSidecarInjection.profiles
clusterAgent.admissionController.agentSidecarInjection.provider: spec.features.admissionController.agentSidecarInjection.provider
clusterAgent.admissionController.agentSidecarInjection.selectors: spec.features.admissionController.agentSidecarInjection.selectors
clusterAgent.admissionController.configMode: spec.features.admissionController.agentCommunicationMode
clusterAgent.admissionController.containerRegistry: spec.features.admissionController.registry
clusterAgent.admissionController.enabled: spec.features.admissionController.enabled
clusterAgent.admissionController.failurePolicy: spec.features.admissionController.failurePolicy
clusterAgent.admissionController.mutateUnlabelled: spec.features.admissionController.mutateUnlabelled
clusterAgent.admissionController.port: ""
clusterAgent.admissionController.remoteInstrumentation.enabled: spec.features.admissionController.cwsInstrumentation.enabled
clusterAgent.admissionController.webhookName: spec.features.admissionController.webhookName
clusterAgent.advancedConfd: ""
clusterAgent.affinity: spec.override.clusterAgent.affinity
clusterAgent.command: spec.override.clusterAgent.containers.cluster-agent.command
clusterAgent.confd: spec.override.clusterAgent.extraConfd
clusterAgent.containerExclude: ""
clusterAgent.containerInclude: ""
clusterAgent.containers.clusterAgent.securityContext: spec.override.clusterAgent.containers.clusterAgent.securityContext.securityContext
clusterAgent.containers.clusterAgent.securityContext.allowPrivilegeEscalation: spec.override.clusterAgent.containers.clusterAgent.securityContext.securityContext.allowPrivilegeEscalation
clusterAgent.containers.clusterAgent.securityContext.readOnlyRootFilesystem: spec.override.clusterAgent.containers.clusterAgent.securityContext.securityContext.readOnlyRootFilesystem
clusterAgent.containers.initContainer.securityContext: spec.override.clusterAgent.containers.init-config.securityContext
clusterAgent.createPodDisruptionBudget: ""
clusterAgent.datadog_cluster_yaml: spec.override.clusterAgent.customConfigurations.datadog-cluster.yaml.configData
clusterAgent.deploymentAnnotations: ""
clusterAgent.dnsConfig: spec.override.clusterAgent.dnsConfig
clusterAgent.enabled: ""
clusterAgent.env: spec.override.clusterAgent.env
clusterAgent.envDict: ""
clusterAgent.envFrom: spec.override.clusterAgent.envFrom
clusterAgent.healthPort: spec.override.clusterAgent.containers.cluster-agent.healthPort
clusterAgent.image.digest: ""
clusterAgent.image.doNotCheckTag: ""
clusterAgent.image.name: spec.override.clusterAgent.image.name
clusterAgent.image.pullPolicy: spec.override.clusterAgent.image.pullPolicy
clusterAgent.image.pullSecrets: spec.override.clusterAgent.image.pullSecrets
clusterAgent.image.repository: ""
clusterAgent.image.tag: spec.override.clusterAgent.image.tag
clusterAgent.livenessProbe: spec.override.clusterAgent.containers.cluster-agent.livenessProbe
clusterAgent.livenessProbe.failureThreshold: spec.override.clusterAgent.containers.cluster-agent.livenessProbe.failureThreshold
clusterAgent.livenessProbe.initialDelaySeconds: spec.override.clusterAgent.containers.cluster-agent.livenessProbe.initialDelaySeconds
clusterAgent.livenessProbe.periodSeconds: spec.override.clusterAgent.containers.cluster-agent.livenessProbe.periodSeconds
clusterAgent.livenessProbe.successThreshold: spec.override.clusterAgent.containers.cluster-agent.livenessProbe.successThreshold
clusterAgent.livenessProbe.timeoutSeconds: spec.override.clusterAgent.containers.cluster-agent.livenessProbe.timeoutSeconds
clusterAgent.metricsProvider.aggregator: ""
clusterAgent.metricsProvider.createReaderRbac: ""
clusterAgent.metricsProvider.enabled: spec.features.externalMetricsServer.enabled
clusterAgent.metricsProvider.endpoint: spec.features.externalMetricsServer.endpoint
clusterAgent.metricsProvider.registerAPIService: spec.features.externalMetricsServer.registerAPIService
clusterAgent.metricsProvider.service.port: spec.features.externalMetricsServer.port
clusterAgent.metricsProvider.service.type: ""
clusterAgent.metricsProvider.useDatadogMetrics: spec.features.externalMetricsServer.useDatadogMetrics
clusterAgent.metricsProvider.wpaController: spec.features.externalMetricsServer.wpaController
clusterAgent.networkPolicy.create: ""
clusterAgent.nodeSelector: spec.override.clusterAgent.nodeSelector
clusterAgent.podAnnotations: spec.override.clusterAgent.annotations
clusterAgent.podSecurity.podSecurityPolicy.create: ""
clusterAgent.podSecurity.securityContextConstraints.create: ""
clusterAgent.priorityClassName: spec.override.clusterAgent.priorityClassName
clusterAgent.rbac.automountServiceAccountToken: ""
clusterAgent.rbac.create: spec.override.clusterAgent.createRbac
clusterAgent.rbac.flareAdditionalPermissions: ""
clusterAgent.rbac.serviceAccountAnnotations: spec.override.clusterAgent.serviceAccountAnnotations
clusterAgent.rbac.serviceAccountName: spec.override.clusterAgent.serviceAccountName
clusterAgent.readinessProbe: spec.override.clusterAgent.containers.cluster-agent.readinessProbe
clusterAgent.readinessProbe.failureThreshold: spec.override.clusterAgent.containers.cluster-agent.readinessProbe.failureThreshold
clusterAgent.readinessProbe.initialDelaySeconds: spec.override.clusterAgent.containers.cluster-agent.readinessProbe.initialDelaySeconds
clusterAgent.readinessProbe.periodSeconds: spec.override.clusterAgent.containers.cluster-agent.readinessProbe.periodSeconds
clusterAgent.readinessProbe.successThreshold: spec.override.clusterAgent.containers.cluster-agent.readinessProbe.successThreshold
clusterAgent.readinessProbe.timeoutSeconds: spec.override.clusterAgent.containers.cluster-agent.readinessProbe.timeoutSeconds
clusterAgent.replicas: spec.override.clusterAgent.replicas
clusterAgent.resources: spec.override.clusterAgent.containers.cluster-agent.resources
clusterAgent.revisionHistoryLimit: ""
clusterAgent.securityContext: spec.override.clusterAgent.securityContext
clusterAgent.shareProcessNamespace: ""
clusterAgent.startupProbe.failureThreshold: ""
clusterAgent.startupProbe.initialDelaySeconds: ""
clusterAgent.startupProbe.periodSeconds: ""
clusterAgent.startupProbe.successThreshold: ""
clusterAgent.startupProbe.timeoutSeconds: ""
clusterAgent.strategy: spec.override.clusterAgent.updateStrategy
clusterAgent.strategy.rollingUpdate.maxSurge: spec.override.clusterAgent.updateStrategy.rollingUpdate.maxSurge
clusterAgent.strategy.rollingUpdate.maxUnavailable: spec.override.clusterAgent.updateStrategy.rollingUpdate.maxUnavailable
clusterAgent.strategy.type: spec.override.clusterAgent.updateStrategy.type
clusterAgent.token: spec.global.clusterAgentToken
clusterAgent.tokenExistingSecret: spec.global.clusterAgentTokenSecret.secretName
clusterAgent.tolerations: spec.override.clusterAgent.tolerations
clusterAgent.topologySpreadConstraints: ""
clusterAgent.useHostNetwork: spec.override.clusterAgent.hostNetwork
clusterAgent.volumeMounts: spec.override.clusterAgent.containers.cluster-agent.volumeMounts
clusterAgent.volumes: spec.override.clusterAgent.volumes
clusterChecksRunner.additionalLabels: spec.override.clusterChecksRunner.labels
clusterChecksRunner.affinity: spec.override.clusterChecksRunner.affinity
clusterChecksRunner.createPodDisruptionBudget: ""
clusterChecksRunner.deploymentAnnotations: ""
clusterChecksRunner.dnsConfig: spec.override.clusterChecksRunner.dnsConfig
clusterChecksRunner.enabled: spec.features.clusterChecks.useClusterChecksRunners
clusterChecksRunner.env: spec.override.clusterChecksRunner.env
clusterChecksRunner.envDict: ""
clusterChecksRunner.envFrom: spec.override.clusterChecksRunner.envFrom
clusterChecksRunner.healthPort: spec.override.clusterChecksRunner.containers.agent.healthPort
clusterChecksRunner.image.digest: ""
clusterChecksRunner.image.name: spec.override.clusterChecksRunner.image.name
clusterChecksRunner.image.pullPolicy: spec.override.clusterChecksRunner.image.pullPolicy
clusterChecksRunner.image.pullSecrets: spec.override.clusterChecksRunner.image.pullSecrets
clusterChecksRunner.image.repository: ""
clusterChecksRunner.image.tag: spec.override.clusterChecksRunner.image.tag
clusterChecksRunner.image.tagSuffix: ""
clusterChecksRunner.livenessProbe: spec.override.clusterChecksRunner.containers.agent.livenessProbe
clusterChecksRunner.livenessProbe.failureThreshold: spec.override.clusterChecksRunner.containers.agent.livenessProbe.failureThreshold
clusterChecksRunner.livenessProbe.initialDelaySeconds: spec.override.clusterChecksRunner.containers.agent.livenessProbe.initialDelaySeconds
clusterChecksRunner.livenessProbe.periodSeconds: spec.override.clusterChecksRunner.containers.agent.livenessProbe.periodSeconds
clusterChecksRunner.livenessProbe.successThreshold: spec.override.clusterChecksRunner.containers.agent.livenessProbe.successThreshold
clusterChecksRunner.livenessProbe.timeoutSeconds: spec.override.clusterChecksRunner.containers.agent.livenessProbe.timeoutSeconds
clusterChecksRunner.networkPolicy.create: ""
clusterChecksRunner.nodeSelector: spec.override.clusterChecksRunner.nodeSelector
clusterChecksRunner.podAnnotations: spec.override.clusterChecksRunner.annotations
clusterChecksRunner.ports: ""
clusterChecksRunner.priorityClassName: spec.override.clusterChecksRunner.priorityClassName
clusterChecksRunner.rbac.automountServiceAccountToken: ""
clusterChecksRunner.rbac.create: spec.override.clusterChecksRunner.createRbac
clusterChecksRunner.rbac.dedicated: ""
clusterChecksRunner.rbac.serviceAccountAnnotations: spec.override.clusterChecksRunner.serviceAccountAnnotations
clusterChecksRunner.rbac.serviceAccountName: spec.override.clusterChecksRunner.serviceAccountName
clusterChecksRunner.readinessProbe: spec.override.clusterChecksRunner.containers.agent.readinessProbe
clusterChecksRunner.readinessProbe.failureThreshold: spec.override.clusterChecksRunner.containers.agent.readinessProbe.failureThreshold
clusterChecksRunner.readinessProbe.initialDelaySeconds: spec.override.clusterChecksRunner.containers.agent.readinessProbe.initialDelaySeconds
clusterChecksRunner.readinessProbe.periodSeconds: spec.override.clusterChecksRunner.containers.agent.readinessProbe.periodSeconds
clusterChecksRunner.readinessProbe.successThreshold: spec.override.clusterChecksRunner.containers.agent.readinessProbe.successThreshold
clusterChecksRunner.readinessProbe.timeoutSeconds: spec.override.clusterChecksRunner.containers.agent.readinessProbe.timeoutSeconds
clusterChecksRunner.replicas: spec.override.clusterChecksRunner.replicas
clusterChecksRunner.resources: spec.override.clusterChecksRunner.containers.agent.resources
clusterChecksRunner.revisionHistoryLimit: ""
clusterChecksRunner.securityContext: spec.override.clusterChecksRunner.securityContext
clusterChecksRunner.startupProbe.failureThreshold: ""
clusterChecksRunner.startupProbe.initialDelaySeconds: ""
clusterChecksRunner.startupProbe.periodSeconds: ""
clusterChecksRunner.startupProbe.successThreshold: ""
clusterChecksRunner.startupProbe.timeoutSeconds: ""
clusterChecksRunner.strategy: spec.override.clusterChecksRunner.updateStrategy
clusterChecksRunner.strategy.rollingUpdate.maxSurge: spec.override.clusterChecksRunner.updateStrategy.rollingUpdate.maxSurge
clusterChecksRunner.strategy.rollingUpdate.maxUnavailable: spec.override.clusterChecksRunner.updateStrategy.rollingUpdate.maxUnavailable
clusterChecksRunner.strategy.type: spec.override.clusterChecksRunner.updateStrategy.type
clusterChecksRunner.tolerations: spec.override.clusterChecksRunner.tolerations
clusterChecksRunner.topologySpreadConstraints: ""
clusterChecksRunner.volumeMounts: spec.override.clusterChecksRunner.containers.agent.volumeMounts
clusterChecksRunner.volumes: spec.override.clusterChecksRunner.volumes
commonLabels: ""
datadog-crds.crds.datadogMetrics: ""
datadog-crds.crds.datadogPodAutoscalers: ""
datadog.apiKey: spec.global.credentials.apiKey
datadog.apiKeyExistingSecret: spec.global.credentials.apiSecret.secretName
datadog.apm.enabled: ""
datadog.apm.hostSocketPath: spec.features.apm.unixDomainSocketConfig.path
datadog.apm.instrumentation.disabledNamespaces: ""
datadog.apm.instrumentation.enabled: ""
datadog.apm.instrumentation.enabledNamespaces: ""
datadog.apm.instrumentation.language_detection.enabled: ""
datadog.apm.instrumentation.libVersions: ""
datadog.apm.instrumentation.skipKPITelemetry: ""
datadog.apm.port: spec.features.apm.hostPortConfig.hostPort
datadog.apm.portEnabled: spec.features.apm.hostPortConfig.enabled
datadog.apm.socketEnabled: spec.features.apm.enabled
datadog.apm.socketPath: ""
datadog.apm.useSocketVolume: ""
datadog.appKey: spec.global.credentials.appKey
datadog.appKeyExistingSecret: spec.global.credentials.appSecret.secretName
datadog.asm.iast.enabled: ""
datadog.asm.sca.enabled: ""
datadog.asm.threats.enabled: ""
datadog.checksCardinality: ""
datadog.checksd: spec.override.nodeAgent.extraChecksd
datadog.clusterChecks.enabled: spec.features.clusterChecks.enabled
datadog.clusterChecks.shareProcessNamespace: ""
datadog.clusterName: spec.global.clusterName
datadog.clusterTagger.collectKubernetesTags: ""
datadog.collectEvents: spec.features.eventCollection.collectKubernetesEvents
datadog.confd: spec.override.nodeAgent.extraConfd
datadog.containerExclude: ""
datadog.containerExcludeLogs: ""
datadog.containerExcludeMetrics: ""
datadog.containerImageCollection.enabled: ""
datadog.containerInclude: ""
datadog.containerIncludeLogs: ""
datadog.containerIncludeMetrics: ""
datadog.containerLifecycle.enabled: ""
datadog.containerRuntimeSupport.enabled: ""
datadog.criSocketPath: spec.global.criSocketPath
datadog.dd_url: spec.endpoint.url
datadog.dockerSocketPath: spec.global.dockerSocketPath
datadog.dogstatsd.hostSocketPath: ""
datadog.dogstatsd.nonLocalTraffic: ""
datadog.dogstatsd.originDetection: spec.features.dogstatsd.originDetectionEnabled
datadog.dogstatsd.port: spec.features.dogstatsd.hostPortConfig.hostPort
datadog.dogstatsd.socketPath: spec.features.dogstatsd.unixDomainSocketConfig.path
datadog.dogstatsd.tagCardinality: spec.features.dogstatsd.tagCardinality
datadog.dogstatsd.tags: ""
datadog.dogstatsd.useHostPID: ""
datadog.dogstatsd.useHostPort: spec.features.dogstatsd.hostPortConfig.enabled
datadog.dogstatsd.useSocketVolume: spec.features.dogstatsd.unixDomainSocketConfig.enabled
datadog.env: spec.override.nodeAgent.env
datadog.envDict: ""
datadog.envFrom: spec.override.nodeAgent.envFrom
datadog.excludePauseContainer: ""
datadog.expvarPort: ""
datadog.helmCheck.collectEvents: spec.features.helmCheck.collectEvents
datadog.helmCheck.enabled: spec.features.helmCheck.enabled
datadog.helmCheck.valuesAsTags: spec.features.helmCheck.valuesAsTags
datadog.hostVolumeMountPropagation: ""
datadog.ignoreAutoConfig: ""
datadog.kubeStateMetricsCore.annotationsAsTags: ""
datadog.kubeStateMetricsCore.collectApiServicesMetrics: ""
datadog.kubeStateMetricsCore.collectConfigMaps: ""
datadog.kubeStateMetricsCore.collectCrdMetrics: ""
datadog.kubeStateMetricsCore.collectSecretMetrics: ""
datadog.kubeStateMetricsCore.collectVpaMetrics: ""
datadog.kubeStateMetricsCore.enabled: spec.features.kubeStateMetricsCore.enabled
datadog.kubeStateMetricsCore.ignoreLegacyKSMCheck: ""
datadog.kubeStateMetricsCore.labelsAsTags: ""
datadog.kubeStateMetricsCore.rbac.create: ""
datadog.kubeStateMetricsCore.useClusterCheckRunners: ""
datadog.kubeStateMetricsEnabled: ""
datadog.kubeStateMetricsNetworkPolicy.create: ""
datadog.kubelet.agentCAPath: spec.global.kubelet.agentCAPath
datadog.kubelet.coreCheckEnabled: ""
datadog.kubelet.host: spec.global.kubelet.host
datadog.kubelet.host.valueFrom.fieldRef.fieldPath: ""
datadog.kubelet.hostCAPath: spec.global.kubelet.hostCAPath
datadog.kubelet.podLogsPath: ""
datadog.kubelet.tlsVerify: spec.global.kubelet.tlsVerify
datadog.kubernetesEvents.collectedEventTypes: spec.features.eventCollection.collectEventTypes
datadog.kubernetesEvents.filteringEnabled: ""
datadog.kubernetesEvents.unbundleEvents: spec.features.eventCollection.unbundleEvents
datadog.kubernetesResourcesAnnotationsAsTags: spec.global.kubernetesResourcesAnnotationsAsTags
datadog.kubernetesResourcesLabelsAsTags: spec.global.kubernetesResourcesLabelsAsTags
datadog.leaderElection: ""
datadog.leaderElectionResource: ""
datadog.leaderLeaseDuration: ""
datadog.logLevel: spec.global.logLevel
datadog.logs.autoMultiLineDetection: ""
datadog.logs.containerCollectAll: spec.features.logCollection.containerCollectAll
datadog.logs.containerCollectUsingFiles: spec.features.logCollection.containerCollectUsingFiles
datadog.logs.enabled: spec.features.logCollection.enabled
datadog.namespaceAnnotationsAsTags: spec.global.namespaceAnnotationsAsTags
datadog.namespaceLabelsAsTags: spec.global.namespaceLabelsAsTags
datadog.networkMonitoring.enabled: spec.features.npm.enabled
datadog.networkPolicy.cilium.dnsSelector: spec.global.networkPolicy.dnsSelectorEndpoints
datadog.networkPolicy.cilium.dnsSelector.toEndpoints: ""
datadog.networkPolicy.create: spec.global.networkPolicy.create
datadog.networkPolicy.flavor: spec.global.networkPolicy.flavor
datadog.nodeLabelsAsTags: spec.global.nodeLabelsAsTags
datadog.orchestratorExplorer.container_scrubbing.enabled: spec.features.orchestratorExplorer.scrubContainers
datadog.orchestratorExplorer.customResources: spec.features.orchestratorExplorer.customResources
datadog.orchestratorExplorer.enabled: spec.features.orchestratorExplorer.enabled
datadog.originDetectionUnified.enabled: spec.global.originDetectionUnified.enabled
datadog.osReleasePath: ""
datadog.otelCollector.enabled: ""
datadog.otelCollector.ports: ""
datadog.otlp.logs.enabled: ""
datadog.otlp.receiver.protocols.grpc.enabled: spec.features.otlp.receiver.protocols.grpc.enabled
datadog.otlp.receiver.protocols.grpc.endpoint: spec.features.otlp.receiver.protocols.grpc.endpoint
datadog.otlp.receiver.protocols.grpc.useHostPort: ""
datadog.otlp.receiver.protocols.http.enabled: spec.features.otlp.receiver.protocols.http.enabled
datadog.otlp.receiver.protocols.http.endpoint: spec.features.otlp.receiver.protocols.http.endpoint
datadog.otlp.receiver.protocols.http.useHostPort: ""
datadog.podAnnotationsAsTags: spec.global.podAnnotationsAsTags
datadog.podLabelsAsTags: spec.global.podLabelsAsTags
datadog.processAgent.containerCollection: ""
datadog.processAgent.enabled: ""
datadog.processAgent.processCollection: ""
datadog.processAgent.processDiscovery: spec.features.processDiscovery.enabled
datadog.processAgent.runInCoreAgent: ""
datadog.processAgent.stripProcessArguments: spec.features.liveProcessCollection.stripProcessArguments
datadog.profiling.enabled: ""
datadog.prometheusScrape.additionalConfigs: spec.features.prometheusScrape.additionalConfigs
datadog.prometheusScrape.enabled: spec.features.prometheusScrape.enabled
datadog.prometheusScrape.serviceEndpoints: spec.features.prometheusScrape.enableServiceEndpoints
datadog.prometheusScrape.version: spec.features.prometheusScrape.version
datadog.remoteConfiguration.enabled: spec.features.remoteConfiguration.enabled
datadog.sbom.containerImage.enabled: spec.features.sbom.containerImage.enabled
datadog.sbom.containerImage.uncompressedLayersSupport: ""
datadog.sbom.host.enabled: spec.features.sbom.host.enabled
datadog.secretAnnotations: ""
datadog.secretBackend.arguments: spec.global.secretBackend.args
datadog.secretBackend.command: spec.global.secretBackend.command
datadog.secretBackend.enableGlobalPermissions: spec.global.secretBackend.enableGlobalPermissions
datadog.secretBackend.roles: spec.global.secretBackend.roles
datadog.secretBackend.timeout: spec.global.secretBackend.timeout
datadog.securityAgent.compliance.checkInterval: spec.features.cspm.checkInterval
datadog.securityAgent.compliance.configMap: spec.features.cspm.customBenchmarks.configMap.name
datadog.securityAgent.compliance.enabled: spec.features.cspm.enabled
datadog.securityAgent.compliance.host_benchmarks.enabled: spec.features.cspm.hostBenchmarks
datadog.securityAgent.compliance.xccdf.enabled: ""
datadog.securityAgent.runtime.activityDump.cgroupDumpTimeout: ""
datadog.securityAgent.runtime.activityDump.cgroupWaitListSize: ""
datadog.securityAgent.runtime.activityDump.enabled: ""
datadog.securityAgent.runtime.activityDump.pathMerge.enabled: ""
datadog.securityAgent.runtime.activityDump.tracedCgroupsCount: ""
datadog.securityAgent.runtime.enabled: spec.features.cws.enabled
datadog.securityAgent.runtime.fimEnabled: ""
datadog.securityAgent.runtime.network.enabled: spec.features.cws.network.enabled
datadog.securityAgent.runtime.policies.configMap: spec.features.cws.customPolicies.configMap.name
datadog.securityAgent.runtime.securityProfile: ""
datadog.securityAgent.runtime.securityProfile.anomalyDetection: ""
datadog.securityAgent.runtime.securityProfile.anomalyDetection.enabled: ""
datadog.securityAgent.runtime.securityProfile.autoSuppression.enabled: ""
datadog.securityAgent.runtime.securityProfile.enabled: spec.features.cws.securityProfiles.enabled
datadog.securityAgent.runtime.syscallMonitor.enabled: spec.features.cws.syscallMonitorEnabled
datadog.securityAgent.runtime.useSecruntimeTrack: ""
datadog.securityContext: spec.global.securityContext
datadog.securityContext.runAsUser: ""
datadog.serviceMonitoring.enabled: spec.features.usm.enabled
datadog.site: spec.global.site
datadog.systemProbe.apparmor: spec.override.nodeAgent.containers.system-probe.appArmorProfileName
datadog.systemProbe.bpfDebug: ""
datadog.systemProbe.btfPath: ""
datadog.systemProbe.collectDNSStats: spec.features.npm.collectDNSStats
datadog.systemProbe.conntrackInitTimeout: ""
datadog.systemProbe.conntrackMaxStateSize: ""
datadog.systemProbe.debugPort: ""
datadog.systemProbe.enableConntrack: spec.features.npm.enableConntrack
datadog.systemProbe.enableDefaultKernelHeadersPaths: ""
datadog.systemProbe.enableDefaultOsReleasePaths: ""
datadog.systemProbe.enableOOMKill: spec.features.oomKill.enabled
datadog.systemProbe.enableTCPQueueLength: spec.features.tcpQueueLength.enabled
datadog.systemProbe.maxTrackedConnections: ""
datadog.systemProbe.mountPackageManagementDirs: ""
datadog.systemProbe.runtimeCompilationAssetDir: ""
datadog.systemProbe.seccomp: spec.override.nodeAgent.containers.system-probe.seccompConfig.customProfile
datadog.systemProbe.seccompRoot: spec.override.nodeAgent.containers.system-probe.seccompConfig.customRootPath
datadog.tags: spec.global.tags
datadog.useHostPID: spec.override.nodeAgent.hostPID
existingClusterAgent.clusterchecksEnabled: ""
existingClusterAgent.join: ""
existingClusterAgent.serviceName: ""
existingClusterAgent.tokenSecretName: ""
fips.customFipsConfig: ""
#  customFIPSConfig: data, items, name
fips.enabled: spec.global.fips.enabled
fips.image.digest: ""
fips.image.name: spec.global.fips.image.name
fips.image.pullPolicy: ""
fips.image.repository: ""
fips.image.tag: spec.global.fips.image.tag
fips.local_address: spec.global.fips.localAddress
fips.port: spec.global.fips.port
fips.portRange: spec.global.fips.portRange
fips.resources: ""
#resources claims, limits, requests
fips.use_https: spec.global.fips.useHTTPS
fullnameOverride: ""
nameOverride: spec.global.localservice.nameOverride
kube-state-metrics.image: ""
kube-state-metrics.image.repository: ""
kube-state-metrics.nodeSelector.kubernetes.io/os: ""
kube-state-metrics.rbac.create: ""
kube-state-metrics.serviceAccount.create: ""
kube-state-metrics.serviceAccount.name: ""
providers.aks.enabled: ""
providers.eks.ec2.useHostnameFromFile: ""
providers.gke.autopilot: ""
providers.gke.cos: ""
registry: spec.global.registry
remoteConfiguration.enabled: spec.features.remoteConfiguration.enabled
targetSystem: ""
